[user]
    name = Bernardo Loureiro

[github]
    user = bernardolm

[color]
    branch = true
    diff = true
    status = true
    ui = true

[push]
    default = matching
    followTags = true

[pull]
    default = matching
	rebase = true

[url "git@github.com:"]
    insteadOf = "gh:"
    insteadOf = "https://github.com"
    pushInsteadOf = "git://github.com"
    pushInsteadOf = "github:"

[core]
	pager = less -R
    editor = code --wait
    untrackedCache = true
    whitespace = space-before-tab,-indent-with-non-tab,trailing-space

[alias]
    mv-index = "!f() { \
        old=\"$1\"; \
        new=\"$2\"; \
        info=$(git ls-files -s -- \"$old\" | cut -d' ' -f-2 | tr ' ' ,); \
        git update-index --add --cacheinfo \"$info,$new\" && \
        git rm --cached \"$old\"; \
    }; f"
	build = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"build(${scope}): ${@}\"; else git commit -m \"build: ${@}\"; fi }; a"
	chore = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"chore(${scope}): ${@}\"; else git commit -m \"chore: ${@}\"; fi }; a"
	ci = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"ci(${scope}): ${@}\"; else git commit -m \"ci: ${@}\"; fi }; a"
	docs = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"docs(${scope}): ${@}\"; else git commit -m \"docs: ${@}\"; fi }; a"
	feat = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"feat(${scope}): ${@}\"; else git commit -m \"feat: ${@}\"; fi }; a"
	fix = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"fix(${scope}): ${@}\"; else git commit -m \"fix: ${@}\"; fi }; a"
	perf = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"perf(${scope}): ${@}\"; else git commit -m \"perf: ${@}\"; fi }; a"
	refactor = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"refactor(${scope}): ${@}\"; else git commit -m \"refactor: ${@}\"; fi }; a"
	revert = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"revert(${scope}): ${@}\"; else git commit -m \"revert: ${@}\"; fi }; a"
	style = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"style(${scope}): ${@}\"; else git commit -m \"style: ${@}\"; fi }; a"
	test = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"test(${scope}): ${@}\"; else git commit -m \"test: ${@}\"; fi }; a"
	rev = "!a() { if [ \"$1\" = \"-s\" ] || [ \"$1\" = \"--scope\" ]; then local scope=\"$2\"; shift 2; git commit -m \"revert(${scope}): ${@}\"; else git commit -m \"revert: ${@}\"; fi }; a"

[merge]
    log = true
    tool = meld

[apply]
    whitespace = fix

[difftool]
    prompt = false

[help]
    autocorrect = 1

[diff]
    renames = copies
    tool = meld
	colorMoved = zebra

[difftool "default-difftool"]
    cmd = code --wait --diff $LOCAL $REMOTE

[init]
    defaultBranch = main

[commit]
    gpgsign = true

[branch]
    sort = -committerdate

[gpg]
    format = ssh

[include]
    path = ~/sync/git/.gitconfig

[safe]
	directory = /home/bernardo/workspaces/bernardolm/dotfiles/git/modules/dotbot
[color "status"]
	branch = normal
	added = 10 normal
	updated = 10 normal
	localbranch = normal
	changed = 11 normal
	header = normal
	remotebranch = normal blink
	nobranch = normal bold
	unmerged = 9 normal
	untracked = normal dim
[color "branch"]
	plain = normal
	remote = normal blink
	current = normal reverse
	local = normal
	upstream = normal blink
[color "remote"]
	hint = normal dim
	success = 2 normal
	error = 1 normal
	warning = 3 normal
[color "interactive"]
	header = normal dim bold
	prompt = 15 4
	help = normal dim
	error = normal bold
[color "diff"]
	commit = normal
	newMoved = 15 3
	oldMovedAlternativeDimmed = 7 5 dim
	frag = normal dim
	oldMovedAlternative = 7 5
	contextBold = normal bold
	newBold = 15 2 bold
	context = normal
	oldMoved = 7 3
	oldBold = 7 1 bold
	newMovedDimmed = 15 3 dim
	func = normal dim
	meta = normal dim
	newDimmed = 15 2 dim
	newMovedAlternative = 15 5
	new = 15 2
	newMovedAlternativeDimmed = 15 5 dim
	whitespace = normal 9
	oldMovedDimmed = 7 3 dim
	oldDimmed = 7 1 dim
	old = 7 1
[color "decorate"]
	branch = normal
	tag = normal
	remotebranch = normal blink
	stash = normal dim
	grafted = normal bold
	HEAD = normal italic
