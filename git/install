#!/usr/bin/env bash

shell_debug_relay=$SHELL_DEBUG
SHELL_DEBUG=true

# shellcheck source=/dev/null
. "${DOTFILES}/zsh/functions/log"

log start "git setup"

_git_submodules="${DOTFILES}/.gitmodules"

[ ! -d "${DOTFILES}/git/modules" ] && mkdir -p "${DOTFILES}/git/modules"

log info "sanitizing git submodules"

# $SHELL_DEBUG && git config --file "${_git_submodules}" --list | tr ' ' '\n'

cat < "${_git_submodules}" | grep '\[submodule' | while read -r item; do
    name=$(echo "$item" | sed -E 's/.*"(.*)".*/\1/g')
    label=$(echo "$name" | xargs basename)
    path=$(git config --file "${_git_submodules}" --get "submodule.${name}.path")
    url=$(git config --file "${_git_submodules}" --get "submodule.${name}.url")

    echo -e "submodule ${label}:\n\tpath:\t${DOTFILES}/${path}\n\turl:\t${url}"

    echo -en "\tstatus:"

    if [ -d "${DOTFILES}/${path}" ]; then
        echo -en " updating..."
        git submodule update --init "${DOTFILES}/${path}"
    else
        echo -en " adding..."
        git submodule add --force "${url}" "${DOTFILES}/${path}"
    fi
    echo -e " done."
done

git config --global --add safe.directory "${DOTFILES}/git/modules/dotbot"

log finish "git setup"

SHELL_DEBUG=$shell_debug_relay
