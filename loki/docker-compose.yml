services:

  loki:
    command: -config.file=/mnt/config/loki-config.yaml
    container_name: loki
    env_file:
      - $DOTFILES/loki/.env
    environment:
      TZ: America/Sao_Paulo
    image: grafana/loki:latest
    network_mode: bridge
    ports:
      - 3100:3100
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /mnt/data/docker-volumes/loki:/loki
      - $DOTFILES/loki/loki-config.yaml:/mnt/config/loki-config.yaml:ro

  promtail:
    command: -config.file=/mnt/config/promtail-config.yaml
    container_name: promtail
    env_file:
      - $DOTFILES/loki/.env
    environment:
      TZ: America/Sao_Paulo
    image: grafana/promtail:latest
    network_mode: bridge
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - $DOTFILES/loki/promtail-config.yaml:/mnt/config/promtail-config.yaml:ro
      # - /mnt/data/docker-volumes/loki:/var/lib/loki

  # grafana:
  #   environment:
  #     - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #     - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
  #   entrypoint:
  #     - sh
  #     - -euc
  #     - |
  #       mkdir -p /etc/grafana/provisioning/datasources
  #       cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
  #       apiVersion: 1
  #       datasources:
  #       - name: Loki
  #         type: loki
  #         access: proxy
  #         orgId: 1
  #         url: http://loki:3100
  #         basicAuth: false
  #         isDefault: true
  #         version: 1
  #         editable: false
  #       EOF
  #       /run.sh
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   network_mode: bridge
